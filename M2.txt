from google.colab import files 
uploaded = files.upload()
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sn
from sklearn.linear_model import LinearRegression

df=pd.read_csv("temperatures.csv")

#a. Apply Linear Regression using suitable library function and predict the Month-wise temperature.\

sn.regplot(x='YEAR',y='JAN',data=df)
#sn.regplot(x='YEAR',y='FEB',data=df)
#sn.regplot(x='YEAR',y='AUG',data=df)
#sn.regplot(x='YEAR',y='MAR-MAY',data=df)
#sn.regplot(x='YEAR',y='ANNUAL',data=df)

#b. Assessthe performance of regression models using MSE, MAE and R-Square metrics

#input data
x=df['YEAR']

#output data
y=df['JAN']

#converting into array
x=x.values 
#creating 2D Dataset
x.reshape(117,1) 
print(x)

x=x.reshape(117,1)
regressor=LinearRegression()

#for model train
regressor.fit(x,y)   
LinearRegression()
#slope
regressor.coef_     
regressor.intercept_
regressor.predict([['2031']])
print(regressor.predict([['2031']]))
predicted=regressor.predict(x)
print(predicted)

#Mean Absolute Error(MAE)
from sklearn.metrics import mean_absolute_error
mean_absolute_error(y,predicted)

#mean_squared_error(MSE)
from sklearn.metrics import mean_squared_error
mean_squared_error(y,predicted)

#R-Score
from sklearn.metrics import r2_score
r2_score(y,predicted)

#C. Data Visualization
plt.title('Temperature plot of India')
plt.xlabel('YEAR')
plt.ylabel('January Average Temperature')
plt.scatter(x,y,label='actual',color='r')
plt.plot(x,predicted,label='predicted',color='g')
plt.legend()

